
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 
 */
public class FrmDetalles extends javax.swing.JFrame {
    private Reservations reser;
    private Main princ;
    Lista2 miLista2 = new Lista2();
    
    private NodoArbol root;
    /**
     * Creates new form FrmDetalles
     */
    public FrmDetalles(Reservations res, Main prin) {
        initComponents();
        reser = res;
        princ = prin;
        
        this.setExtendedState(MAXIMIZED_BOTH);
        
        
        
        
    }

    private FrmDetalles() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSortRoomNumber = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaMostrar = new javax.swing.JTextArea();
        btnSortArrivalDate = new javax.swing.JButton();
        btnSortDepartureDate = new javax.swing.JButton();
        btnSingout = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(184, 162, 189));

        btnSortRoomNumber.setBackground(new java.awt.Color(184, 162, 189));
        btnSortRoomNumber.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnSortRoomNumber.setForeground(new java.awt.Color(255, 255, 255));
        btnSortRoomNumber.setText("Sort by room number");
        btnSortRoomNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        btnSortRoomNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortRoomNumberActionPerformed(evt);
            }
        });

        txaMostrar.setColumns(20);
        txaMostrar.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        txaMostrar.setRows(5);
        txaMostrar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        txaMostrar.setEnabled(false);
        jScrollPane1.setViewportView(txaMostrar);

        btnSortArrivalDate.setBackground(new java.awt.Color(184, 162, 189));
        btnSortArrivalDate.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnSortArrivalDate.setForeground(new java.awt.Color(255, 255, 255));
        btnSortArrivalDate.setText("Sort by arrival date");
        btnSortArrivalDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        btnSortArrivalDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortArrivalDateActionPerformed(evt);
            }
        });

        btnSortDepartureDate.setBackground(new java.awt.Color(184, 162, 189));
        btnSortDepartureDate.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnSortDepartureDate.setForeground(new java.awt.Color(255, 255, 255));
        btnSortDepartureDate.setText("Sort by departure date");
        btnSortDepartureDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        btnSortDepartureDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortDepartureDateActionPerformed(evt);
            }
        });

        btnSingout.setBackground(new java.awt.Color(184, 162, 189));
        btnSingout.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnSingout.setForeground(new java.awt.Color(255, 255, 255));
        btnSingout.setText("Sign Out");
        btnSingout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        btnSingout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSingoutActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(184, 162, 189));
        btnSearch.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(338, 338, 338)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSortArrivalDate, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSortDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSortRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 412, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnSingout, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnSingout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSortRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(btnSortArrivalDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(btnSortDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(293, 293, 293))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSortDepartureDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortDepartureDateActionPerformed
        // TODO add your handling code here:
        
        //[null][Single][168763][2227964][2][1][June][July][Luis][Santillanes][Delicias][Mexico][ID][6391128877][luis@gmail.com][CCNumber][CCHoster][02][2021][362][null][null]
        Arbol miArbol = new Arbol();
        root = null;
        txaMostrar.setText("");
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date llegada = null;
        
        for (int i = 0; i < princ.getsArreglo().length; i++) {
            System.out.println("i = " + i);
            if (princ.getsArreglo()[i][7] != null) {
                try {
                    llegada = sdf.parse(princ.getsArreglo()[i][7]);
                } catch (ParseException ex) {
                    Logger.getLogger(FrmDetalles.class.getName()).log(Level.SEVERE, null, ex);
                }
                agregarNodo(new NodoArbol(llegada));
            }
        }
        imprimeInOrder();
        
 
        
    }//GEN-LAST:event_btnSortDepartureDateActionPerformed

    private void btnSortRoomNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortRoomNumberActionPerformed
        // TODO add your handling code here:
        Lista miLista = new Lista();
        txaMostrar.setText("");
        //[null][Single][168763][2227964][2][1][June][July][Luis][Santillanes][Delicias][Mexico][ID][6391128877][luis@gmail.com][CCNumber][CCHoster][02][2021][362][null][null]
        for (int i = 0; i < princ.getsArreglo().length; i++) {
            if ((princ.getsArreglo()[i][20]) != null) {
                miLista.add(new Nodo(Integer.parseInt(princ.getsArreglo()[i][20])));
                System.out.println("Nodo original "+i+":  "+miLista.getAt(i));
            }
        }
        
        //CREAR OTRA LISTA E IR METIENDO DATOS DE MENOR A MAYOR
        Lista ori2 = miLista;
        Lista copia = new Lista();
        int temp = 2000;
        
        for (int i = 0; i < miLista.size(); i++) {
            for (int j = 0; j < miLista.size(); j++) {
                if (miLista.getAt(j) < temp) {
                    temp = miLista.getAt(j);
                }
            }
            
            copia.add(new Nodo(temp));
            
            for (int j = 0; j < miLista.size(); j++) {
                if (miLista.getAt(j) == temp) {
                    miLista.setAt(j, 4000);
                    ori2.setAt(j, 4000);
                    System.out.println("             ENTRA");
                }
            }
            miLista.print();
            temp = 2000;
        }
        
        
        System.out.println("miLista.size() = " + miLista.size());
        System.out.println("copia.size() = " + copia.size());
        for (int i = 0; i < copia.size(); i++) {
            for (int j = 0; j < princ.getsArreglo().length; j++) {
                if ( (princ.getsArreglo()[j][20] != null)) {
                    if ((Integer.parseInt(princ.getsArreglo()[j][20])) == (copia.getAt(i))) {
                        txaMostrar.append("Número de habitación: "+copia.getAt(i)+
                            "\n"+"Nombre: "+princ.getsArreglo()[j][8]+" "+princ.getsArreglo()[j][9]+"\n \n");
                    }
                }
            }
            
            System.out.println("Nodo copia "+i+": "+copia.getAt(i));
        }
        
        
    }//GEN-LAST:event_btnSortRoomNumberActionPerformed

    private void btnSingoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSingoutActionPerformed
        // TODO add your handling code here:
        new Inicio(reser, princ).setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnSingoutActionPerformed

    
    public void agregarNodo(NodoArbol nuevo){
        agregarNodoRec(root, nuevo);
    }
    private void agregarNodoRec(NodoArbol actual, NodoArbol nuevo){
        if(root == null){//ARBOL VACÍO
            root = nuevo;
        }else{
            if(nuevo.getValor().getTime() > actual.getValor().getTime()){//MAYOR --> DERECHA
                if(actual.getDer() == null)//ESTÁ VACÍO
                    actual.setDer(nuevo);
                else//YA HAY UN NODO
                    agregarNodoRec(actual.getDer(), nuevo);
            }else if(nuevo.getValor().getTime() < actual.getValor().getTime()){//MENOR --> iZQUIERDA
                if(actual.getIzq() == null)
                    actual.setIzq(nuevo);
                else
                    agregarNodoRec(actual.getIzq(), nuevo);
            }else{//EL VALOR YA EXISTE
                System.out.println("UPS! YA EXISTE EL VALOR");
            }
        }
    }
    
    public void imprimeInOrder(){
        InOrder(root);
    }
    private void InOrder(NodoArbol actual){
        if(actual != null){
            //LEER IZQUIERDA
            InOrder(actual.getIzq());
            //IMPRIMIR
            txaMostrar.append(actual.getValor()+ "\n");
            System.out.println("actual = " + actual.getValor());
            //LEER DERECHA
            InOrder(actual.getDer());
        }
    }
    
    
    
    private void btnSortArrivalDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortArrivalDateActionPerformed
        // TODO add your handling code here:
        //[null][Single][168763][2227964][2][1][June][July][Luis][Santillanes][Delicias][Mexico][ID][6391128877][luis@gmail.com][CCNumber][CCHoster][02][2021][362][null][null]
        Arbol miArbol = new Arbol();
        root = null;
        txaMostrar.setText("");
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date llegada = null;
        
        for (int i = 0; i < princ.getsArreglo().length; i++) {
            System.out.println("i = " + i);
            if (princ.getsArreglo()[i][6] != null) {
                try {
                    llegada = sdf.parse(princ.getsArreglo()[i][6] + "03-00-00");
                } catch (ParseException ex) {
                    Logger.getLogger(FrmDetalles.class.getName()).log(Level.SEVERE, null, ex);
                }
                agregarNodo(new NodoArbol(llegada));
            }
        }
        imprimeInOrder();
        
 
    }//GEN-LAST:event_btnSortArrivalDateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        txaMostrar.setText("");
        String res = "null";
//Verificado, tipoHab, usuario, pin, adultos, niños, fecLlegada, fecSalida, nombre, apellido, ciudad, pais, id, celular, correo, tarjeta, titular, mesExp, añoExp, cvv, #hab, PassHab
//  0           1       2       3       4       5       6           7           8       9       10      11  12      13      14      15      16      17      18      19   20     21
        boolean ban = false;
        res = JOptionPane.showInputDialog(null, "Insert user:", "Search", 1);
        System.out.println("res = " + res);
        if (res == null) {
            JOptionPane.showMessageDialog(null, "Inserte usuario.");
        }else{
            for (int i = 0; i < princ.getsArreglo().length; i++) {
                System.out.println("princ.getsArreglo()[i][2] = " + princ.getsArreglo()[i][2]);
                System.out.println("res = " + res);
                if(princ.getsArreglo()[i][2].equals(res)){
                    ban = true;
                    if ("verificado".equals(princ.getsArreglo()[i][0])) {
                        txaMostrar.append("USER VERIFICATED"+
                                "\nName: "+princ.getsArreglo()[i][8]+" "+princ.getsArreglo()[i][9]+
                                "\nRoom number: "+princ.getsArreglo()[i][20]+
                                "\nRoom pass: "+princ.getsArreglo()[i][21]+
                                "\nUser: "+princ.getsArreglo()[i][2]+
                                "\nPass: "+princ.getsArreglo()[i][3]+
                                "\n#Adults; "+princ.getsArreglo()[i][4]+
                                "\n#Children: "+princ.getsArreglo()[i][5]+
                                "\nArrival date: "+princ.getsArreglo()[i][6]+
                                "\nDeparture date: "+princ.getsArreglo()[i][7]+
                                "\nCity: "+princ.getsArreglo()[i][10]+
                                "\nCountry: "+princ.getsArreglo()[i][11]+
                                "\nID: "+princ.getsArreglo()[i][12]+
                                "\nCellphone number: "+princ.getsArreglo()[i][13]+
                                "\nE-mail: "+princ.getsArreglo()[i][14]
                        );
                    }else{
                        txaMostrar.append("USER NOT VERIFICATED"+
                                "\nName: "+princ.getsArreglo()[i][8]+" "+princ.getsArreglo()[i][9]+
                                "\nRoom number: "+princ.getsArreglo()[i][20]+
                                "\nRoom pass: "+princ.getsArreglo()[i][21]+
                                "\nUser: "+princ.getsArreglo()[i][2]+
                                "\nPass: "+princ.getsArreglo()[i][3]+
                                "\n#Adults; "+princ.getsArreglo()[i][4]+
                                "\n#Children: "+princ.getsArreglo()[i][5]+
                                "\nArrival date: "+princ.getsArreglo()[i][6]+
                                "\nDeparture date: "+princ.getsArreglo()[i][7]+
                                "\nCity: "+princ.getsArreglo()[i][10]+
                                "\nCountry: "+princ.getsArreglo()[i][11]+
                                "\nID: "+princ.getsArreglo()[i][12]+
                                "\nCellphone number: "+princ.getsArreglo()[i][13]+
                                "\nE-mail: "+princ.getsArreglo()[i][14]
                        );
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDetalles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSingout;
    private javax.swing.JButton btnSortArrivalDate;
    private javax.swing.JButton btnSortDepartureDate;
    private javax.swing.JButton btnSortRoomNumber;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaMostrar;
    // End of variables declaration//GEN-END:variables
}
